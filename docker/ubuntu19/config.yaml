
schemaVersion: "2.0.0"

globalEnvVars:
  - key: "VIRTUAL_ENV"
    value: "/opt/ansible/env36"
  - key: "PATH"
    value: "/env/bin:$PATH"
  - key: "JAVA_HOME"
    value: "/usr/lib/jvm/java-8-openjdk-amd64"

fileExistenceTests:
 - name: 'Root'
   path: '/'
   shouldExist: true
   permissions: 'drwxr-xr-x'
   uid: 0
   gid: 0
   isExecutableBy: 'group'

 - name: 'jenkins-slave-startup'
   path: '/jenkins-slave-startup.sh'
   shouldExist: true
   permissions: '-rwxr-xr-x'
   uid: 0
   gid: 0
   isExecutableBy: 'group'

 - name: 'entrypoint'
   path: '/entrypoint.sh'
   shouldExist: true
   permissions: '-rwxr-xr-x'
   uid: 0
   gid: 0
   isExecutableBy: 'group'

#/workspace/slave
#/workspace/slavearc
#/home/jenkins/.gitconfig
#/home/jenkins/.npmrc

 - name: 'jenkins directory'
   path: '/home/jenkins'
   shouldExist: true
   permissions: 'drwxrwxr-x'
   uid: 2000

 - name: 'jenkins .bashrc'
   path: '/home/jenkins/.bashrc'
   shouldExist: true
#   permissions: '-rwxr-xr-x'
   permissions: '-rw-r--r--'
   uid: 2000
   gid: 2000
#   isExecutableBy: 'group'

 - name: 'jenkins settings.xml'
   path: '/home/jenkins/.m2/settings.xml'
   shouldExist: true
   permissions: '-rwxr-xr-x'
   uid: 2000
   gid: 2000

 - name: 'jenkins settings-security.xml'
   path: '/home/jenkins/.m2/settings-security.xml'
   shouldExist: true
   permissions: '-rwxr-xr-x'
   uid: 2000
   gid: 2000

 - name: "check molecule"
   path: '/opt/ansible/env36/bin/molecule'
   shouldExist: true
   isExecutableBy: 'group'

 - name: 'jenkins container-structure-test'
   path: '/usr/local/bin/container-structure-test'
   shouldExist: true
   permissions: '-rwxr-xr-x'

# - name: 'docker access for jenkins'
#   path: '/var/run/docker.sock'
#   shouldExist: true
#   permissions: '-rwxr-xr-x'
#   gid: 2000

 - name: 'sonar-build-wrapper'
   path: '/usr/local/sonar-build-wrapper/build-wrapper-linux-x86-64'
   shouldExist: true
   permissions: '-rwxrwxrwx'

 - name: 'sonar-scanner'
   path: '/usr/local/sonar-runner/bin/sonar-scanner'
   shouldExist: true
   permissions: '-rwxrwxrwx'

 - name: 'bower .config/configstore/bower-github.json'
   path: '/home/jenkins/.config'
   shouldExist: true
   permissions: 'drwxrwxrwx'

 - name: 'bower'
   path: '/usr/bin/bower'
   shouldExist: true
   permissions: 'Lrwxrwxrwx'

 - name: 'npm'
   path: '/usr/bin/npm'
   shouldExist: true
   permissions: 'Lrwxrwxrwx'

 - name: 'node'
   path: '/usr/bin/node'
   shouldExist: true
   permissions: '-rwxr-xr-x'

 - name: 'node 11.15.0'
   path: '/usr/local/n/versions/node/11.15.0/'
   shouldExist: true
   permissions: 'drwxr-xr-x'

 - name: 'docker credentials'
   path: '/home/jenkins/.docker/config.json'
   shouldExist: true
   permissions: '-rwxrwxrwx'

fileContentTests:
 - name: 'jenkins .bashrc'
   path: '/home/jenkins/.bashrc'
   expectedContents: ['.*JAVA_HOME=.*/usr/lib/jvm/java-8-openjdk-amd64.*']
   excludedContents: ['.*/usr/lib/jvm/java-1.8.0-openjdk-amd64.*', '.*/usr/lib/jvm/java-12-oracle.*']

#/usr/java/default

commandTests:
 - name: "check jenkins user"
   command: "whoami"
   expectedOutput: ["jenkins"]

 - name: "check jenkins uid/gid used for config generation"
   command: "id"
   expectedOutput: ["uid=2000.jenkins. gid=2000.docker. .*"]

 - name: "check PATH"
   command: "echo"
   args: ["${PATH}"]
   expectedOutput: ["/env/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"]

# - name: "molecule"
#   setup: [["/bin/bash", "source", "/opt/ansible/env36/bin/activate"], ["pip", "install", "molecule", "ansible"]]
#   command: "which"
#   args: ["molecule"]
#   expectedOutput: ["/opt/ansible/env36/bin/molecule"]

 - name: "check git version"
   command: "git"
   args: ["--version"]
   expectedOutput: ["git version 2.17.*"]

 - name: "check git-lfs version"
   command: "git-lfs"
   args: ["--version"]
   expectedOutput: ["git-lfs/2.9.*"]

 - name: "git config"
   command: "git config  "
   args: ["--global", "--list"]
   expectedOutput: ["user.email=mgr.jenkins@finastra.com
user.name=jenkins, mgr
core.autocrlf=input
maven-scm.maildomain=finastra.com
maven-scm.forceusername=true
http.sslverify=false"]
#   excludedOutput: [".*Inst.*Security.* | .*Security.*Inst.*"]
#   excludedError: [".*Inst.*Security.* | .*Security.*Inst.*"]

 - name: "apt-get upgrade"
   command: "apt-get"
   args: ["-qqs", "upgrade"]
   excludedOutput: [".*Inst.*Security.* | .*Security.*Inst.*"]
   excludedError: [".*Inst.*Security.* | .*Security.*Inst.*"]

 - name: "check openjdk 1.8.0"
   command: "${JAVA_HOME}/bin/java"
   args: ["-version"]
   expectedError: ['openjdk version \"1\.8\.0_222\".*']

# - name: "check openjdk CA root imported"
#   envVars:
#   - key: "PATH"
#     value: "${JAVA_HOME}:${PATH}"
#   command: "${JAVA_HOME}/bin/keytool -list -keystore ${JAVA_HOME}/jre/lib/security/cacerts -storepass changeit | grep -i uk1vswcert01"
#   expectedOutput: ["misys, Jun 7, 2019, trustedCertEntry.*"]

 - name: "check node v11.15"
   command: "node"
   args: ["--version"]
   expectedOutput: ["v11.15.*"]

 - name: "check nodejs v11.15"
   command: "nodejs"
   args: ["--version"]
   expectedOutput: ["v11.15.*"]

 - name: "check npm 6.7.0"
   command: "npm"
   args: ["--version"]
   expectedOutput: ["6.7.*"]

 - name: "check newman 4.5.5"
   command: "newman"
   args: ["--version"]
   expectedOutput: ['4.5.*']

 - name: "check python 2.7.15+"
   command: "python"
   args: ["--version"]
   expectedError: ['Python 2.7.*']

 - name: "check pip 19.3.1"
   command: "pip"
   args: ["--version"]
   expectedOutput: ['pip 19.3.1 from /usr/local/lib/python2.7/dist-packages/pip (python 2.7)']

 - name: "check python 3"
   command: "python3"
   args: ["--version"]
   expectedOutput: ['Python 3.6.*']

 - name: "check python 3.5.7"
   command: "python3.5"
   args: ["--version"]
   expectedOutput: ['Python 3.5.*']

 - name: "check python 3.6.8"
   command: "python3.6"
   args: ["--version"]
   expectedOutput: ['Python 3.6.*']

# - name: "check python 3.7.5"
#   command: "python3.7"
#   args: ["--version"]
#   expectedOutput: ['Python 3.7.*']
#
# - name: "check pip3 19.3.1"
#   command: "pip3"
#   args: ["--version"]
#   expectedOutput: ['pip 19.3.* from /usr/local/lib/python3.7/dist-packages/pip (python 3.7)']

 - name: "check ansible 2.9.0"
   command: "ansible"
   args: ["--version"]
   expectedOutput: ['ansible 2.9.*']

 - name: "check docker 19.03.4"
   command: "docker"
   args: ["--version"]
   expectedOutput: ['Docker version 19.03.*']

metadataTest:
  env:
    - key: TZ
      value: 'Europe/Paris'
    - key: "PATH"
      value: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  labels:
    - key: 'com.example.vendor'
      value: 'ACME Incorporated'
  exposedPorts: []
#  exposedPorts: ["8080", "2345"]
  volumes: []
#  volumes: ["/test"]
  entrypoint: [/entrypoint.sh]
  cmd: ["/jenkins-slave-startup.sh"]
  workdir: "/home/jenkins"
