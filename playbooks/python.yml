---

- hosts: all
  gather_facts: true
  gather_subset: hardware
  tasks:
    - name: group hosts by distribution
      group_by: key="{{ ansible_distribution }}-{{ ansible_distribution_version }}"

- hosts: RedHat-8*:RedHat-7*:RedHat-6*:RedHat-5*:CentOS-7*:CentOS-6*:Ubuntu-20*:Ubuntu-19*:Ubuntu-18*:Ubuntu-17*:Ubuntu-16*:Ubuntu-14*:Ubuntu-13*:Ubuntu-12*
  gather_facts: false
  tasks:
    - name: group hosts for supported distributions
      group_by: key="supported"

- hosts: "!supported"
  gather_facts: false
  tasks:
    - name: fail for unsupported distribution
      fail: msg="{{ ansible_distribution }} {{ ansible_distribution_version }}
                 is not a supported OS for a Tower installation.  Supported
                 OSes include Red Hat Enterprise Linux 6/7/8, CentOS 6/7/8, or
                 Ubuntu 12.04/13.04/14.04/16.04/17.04/18.04/19.04/20.04."
    - debug: msg="Version {{ ansible_distribution }} {{ ansible_distribution_version }} {{ ansible_architecture }}"

- name: Enable repositories (RHEL, CentOS)
  hosts: RedHat-8*:RedHat-7*:RedHat-6*:CentOS-7*:CentOS-6*
  become: true

  tasks:
    - name: Install python repo (RedHat and CentOS based)
      yum:
        name: "{{ item }}"
        state: "{{ jenkins_pkg_state|default('present') }}"
      when: ((ansible_distribution == 'CentOS') and ansible_distribution_major_version == '6')
      with_items:
        #- "https://centos6.iuscommunity.org/ius-release.rpm"
         - "https://repo.ius.io/ius-release-el6.rpm"
      become: true

    - name: Install python repo (RedHat and CentOS based)
      yum:
        name: "{{ item }}"
        state: "{{ jenkins_pkg_state|default('present') }}"
      when: ((ansible_distribution == 'CentOS') and ansible_distribution_major_version == '7')
      with_items:
        #- "https://centos7.iuscommunity.org/ius-release.rpm"
        - "https://repo.ius.io/ius-release-el7.rpm"
      become: true

#TODO at first run there is no jenkins user, so it will not work properly
- hosts: RedHat-8*:RedHat-7*:RedHat-6*:RedHat-5*:CentOS-7*:CentOS-6*:Ubuntu-20*:Ubuntu-19*:Ubuntu-18*:Ubuntu-17*:Ubuntu-16*:Ubuntu-14*:Ubuntu-13*:Ubuntu-12*
  become: true

  tasks:
#    - name: python | Remove venv
#      file: path=/opt/ansible/{{ item }} state=absent
#      with_items:
#        - "env35"
#        - "env36"
#        - "env37"

    - name: Create virtualenv directory
      file:
       path: "/opt/{{ item.path }}"
       state: directory
       mode: 0775
       recurse: yes
       group: "docker"
       owner: "jenkins"
      #when: item.stat.exists == false
      with_items:
        - { path: 'ansible' }
      become: true
      changed_when: false
      tags:
        - venv

    - name: "Installing user-defined requirements configuration file for python"
      copy:
        src: "python/{{ item }}"
        dest: "{{ ansible_user_dir }}"
      with_items:
        - "requirements-current-2.7.txt"
#        - "requirements-current-3.5.txt"
        - "requirements-current-3.6.txt"
        - "requirements-current-3.6-uninstall.txt"
        - "requirements-current-3.7.txt"
        - "requirements-current-3.7-uninstall.txt"
        - "requirements-current-3.8.txt"
        - "requirements-current-3.8-uninstall.txt"
      tags:
        - venv
        - requirements

- name: Install python 2.7
  hosts: Ubuntu-20*:Ubuntu-19*:Ubuntu-18*:Ubuntu-17*:Ubuntu-16*:Ubuntu-14*:Ubuntu-13*:Ubuntu-12*
  become: true
  ignore_errors: true

  roles:
    - python

  vars:
      python_versions: [2.7]
      # python_ppa: no # TODO for Ubuntu-19
      python_install: [numpy, pylint, pandas]
      python_virtualenv_user: jenkins
      python_virtualenvs:
        - path: /opt/ansible/env
          python: python2.7

- name: Install python 3 and 3.6 to 3.8
  hosts: Ubuntu-18*:Ubuntu-16*
  become: true
  ignore_errors: true

  roles:
    - python

  vars:
      python_versions: [3, 3.6, 3.7, 3.8]
      python_install: [numpy, pylint, pandas]
      python_virtualenv_user: jenkins
      python_virtualenvs:
        - path: /opt/ansible/env38
          python: python3.8
        - path: /opt/ansible/env37
          python: python3.7
        - path: /opt/ansible/env36
          python: python3.6

- name: Install python 3 and 3.7 to 3.8
  hosts: Ubuntu-20*:Ubuntu-19*
  become: true
  ignore_errors: true

  roles:
    - python

  vars:
      python_versions: [3, 3.7, 3.8]
      python_install: [numpy, pylint, pandas]
      python_virtualenv_user: jenkins
      python_virtualenvs:
        - path: /opt/ansible/env38
          python: python3.8
        - path: /opt/ansible/env37
          python: python3.7

# Only python 2.6 is installed as default for python2 we need python 2.7
- name: Install python 2.7
  hosts: RedHat-6*:RedHat-5*:CentOS-6*
  become: true

  roles:
    - python

  vars:
      python_versions: [2.7]
      python_yum_enablerepo: epel
      python_pkg_bin: /usr/bin
      python_bin: /usr/bin/python
      python_virtualenv_user: jenkins
      python_virtualenvs:
        - path: /opt/ansible/env
          python: python2.7

- name: Install python 2
  hosts: RedHat-7*:CentOS-7*
  become: true

  roles:
    - python

  vars:
      python_versions: [2]
      python_yum_enablerepo: epel
      python_pkg_bin: /bin
      python_bin: /bin/python
      python_virtualenv_user: jenkins
      python_virtualenvs:
        - path: /opt/ansible/env
          python: python2.7

- name: Install python 3.5
  hosts: RedHat-8*:RedHat-7*:RedHat-6*:RedHat-5*:CentOS-7*:CentOS-6*:CentOS-5*
  become: true
  ignore_errors: true

  roles:
    - python

  vars:
      python_versions: [3.5u]
      python_yum_enablerepo: ius
      python_pkg_bin: /usr/bin
      python_bin: /usr/bin/python
      python_virtualenv_user: jenkins
      python_virtualenvs:
        - path: /opt/ansible/env35
          python: python3.5

- name: Install python 3.6
  hosts: RedHat-8*:RedHat-7*:CentOS-7*:CentOS-6*:CentOS-5*
  become: true
  ignore_errors: true

  roles:
    - python

  vars:
      python_versions: [3.6u]
      python_yum_enablerepo: ius
      python_pkg_bin: /bin
      python_bin: /bin/python
      python_virtualenv_user: jenkins
      python_virtualenvs:
        - path: /opt/ansible/env36
          python: python3.6

- name: Install python requirements
  hosts: RedHat-8*:RedHat-7*:RedHat-6*:RedHat-5*:CentOS-7*:CentOS-6*:Ubuntu-17*:Ubuntu-16*:Ubuntu-14*:Ubuntu-13*:Ubuntu-12*
  become: true

  tasks:
    - name: python2.7 | Create venv and install requirements
      pip:
        requirements: "{{ ansible_user_dir }}/requirements-current-2.7.txt"
        virtualenv: /opt/ansible/env
        virtualenv_python: "python2.7"
      tags:
        - venv
        - requirements
        - python2
      environment:
        PATH: "{{ ansible_env.PATH }}:{{ ansible_user_dir }}/.local/bin"

    - name: python3.6 | Create venv and remove requirements
      pip:
        name: "argparse"
        state: "absent"
        virtualenv: /opt/ansible/env36
        virtualenv_python: "python3.6"
      tags:
        - venv
        - requirements
        - python36
      environment:
        PATH: "{{ ansible_env.PATH }}:{{ ansible_user_dir }}/.local/bin"


    - name: python3.6 | Create venv and install requirements
      pip:
        requirements: "{{ ansible_user_dir }}/requirements-current-3.6.txt"
        virtualenv: /opt/ansible/env36
        virtualenv_python: "python3.6"
      tags:
        - venv
        - requirements
        - python36
      environment:
        PATH: "{{ ansible_env.PATH }}:{{ ansible_user_dir }}/.local/bin"
      ignore_errors: true  # CentOS issue installing python3.6u

    - name: python3.7 | Create venv and remove requirements
      pip:
        name: "argparse"
        state: "absent"
        virtualenv: /opt/ansible/env37
        virtualenv_python: "python3.7"
      tags:
        - venv
        - requirements
        - python36
      environment:
        PATH: "{{ ansible_env.PATH }}:{{ ansible_user_dir }}/.local/bin"
      #ignore_errors: true

    - name: python3.7 | Create venv and install requirements
      pip:
        requirements: "{{ ansible_user_dir }}/requirements-current-3.7.txt"
        virtualenv: /opt/ansible/env37
        virtualenv_python: "python3.7"
      tags:
        - venv
        - requirements
        - python37
      environment:
        PATH: "{{ ansible_env.PATH }}:{{ ansible_user_dir }}/.local/bin"
      ignore_errors: true

# Since Ubuntu 19 we do not maintain python 3.5 and 3.6
- hosts: Ubuntu-20*:Ubuntu-19*:Ubuntu-18*
  become: true

  tasks:
    - name: python2.7 | Create venv and install requirements
      pip:
        requirements: "{{ ansible_user_dir }}/requirements-current-2.7.txt"
        virtualenv: /opt/ansible/env
        virtualenv_python: "python2.7"
      tags:
        - venv
        - requirements
        - python2
      environment:
        PATH: "{{ ansible_env.PATH }}:{{ ansible_user_dir }}/.local/bin"

    - name: python3.7 | Create venv and remove requirements
      pip:
        name: "argparse"
        state: "absent"
        virtualenv: /opt/ansible/env37
        virtualenv_python: "python3.7"
      tags:
        - venv
        - requirements
        - python37
      environment:
        PATH: "{{ ansible_env.PATH }}:{{ ansible_user_dir }}/.local/bin"
      ignore_errors: true

    - name: python3.7 | Create venv and install requirements
      pip:
        requirements: "{{ ansible_user_dir }}/requirements-current-3.7.txt"
        virtualenv: /opt/ansible/env37
        virtualenv_python: "python3.7"
      tags:
        - venv
        - requirements
        - python37
      environment:
        PATH: "{{ ansible_env.PATH }}:{{ ansible_user_dir }}/.local/bin"
      ignore_errors: true

    - name: python3.8 | Create venv and remove requirements
      pip:
        name: "argparse"
        state: "absent"
        virtualenv: /opt/ansible/env38
        virtualenv_python: "python3.8"
      tags:
        - venv
        - requirements
        - python38
      environment:
        PATH: "{{ ansible_env.PATH }}:{{ ansible_user_dir }}/.local/bin"

    - name: python3.8 | Create venv and install requirements
      pip:
        requirements: "{{ ansible_user_dir }}/requirements-current-3.8.txt"
        virtualenv: /opt/ansible/env38
        virtualenv_python: "python3.8"
      tags:
        - venv
        - requirements
        - python38
      environment:
        PATH: "{{ ansible_env.PATH }}:{{ ansible_user_dir }}/.local/bin"
      #ignore_errors: true

- hosts: RedHat-8*:RedHat-7*:RedHat-6*:RedHat-5*:CentOS-7*:CentOS-6*:Ubuntu-20*:Ubuntu-19*:Ubuntu-18*:Ubuntu-17*:Ubuntu-16*:Ubuntu-14*:Ubuntu-13*:Ubuntu-12*
  become: true

  tasks:
    - name: Fix permission on virtualenv (jenkins user)
      file:
        path: /opt/ansible/
        owner: jenkins
        group: docker
        state: directory
        recurse: true
        mode: g+rwx
      become: true
      become_user: root
      changed_when: false
#      ignore_errors: true
      tags:
        - venv
        - requirements
