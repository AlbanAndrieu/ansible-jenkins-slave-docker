# This workflow will build a Docker image

name: Docker CI

on:
  push:
    branches: [master]
    paths-ignore:
      - "**.md"
  pull_request:
    branches: [master]
    paths-ignore:
      - "**.md"

jobs:
  build-template:
    name: Build Docker
    runs-on: ubuntu-18.04
    # See https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md
    #runs-on: ubuntu-latest
    #container:
    #  image: nabla/ansible-jenkins-slave-docker:1.0.16
    steps:
      #- name: Install maven
      #  run: sudo apt -y update && sudo apt -y install maven
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"

      # Runs a single command using the runners shell
      - name: Install Node.Js
        uses: actions/setup-node@v2
        with:
          node-version: 12

      - name: Install bower
        run: npm install -g markdown-toc@latest secretlint@latest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          build-args: |
            ANSIBLE_VAULT_PASS=${{ secrets.ANSIBLE_VAULT_PASS }}
          #            --squash
          #tags: nabla/ansible-jenkins-slave-docker:latest,nabla/ansible-jenkins-slave-docker:${{ github.sha }}
          tags: nabla/ansible-jenkins-slave-docker:latest

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "nabla/ansible-jenkins-slave-docker:latest"
          format: "template"
          template: "@/contrib/sarif.tpl"
          output: "trivy-results.sarif"
          # format: 'table'
          # exit-code: '1'
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-results.sarif"
