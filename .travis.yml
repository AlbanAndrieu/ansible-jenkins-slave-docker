---
language: python
python:
#  - 2.7
#  - 3.3
#  - 3.4
#  - 3.5
#  - 3.6
#  - 3.7
  - 3.8

services:
  - docker
cache:
  bundler:
  directories:
    - $HOME/.cache/pip
env:
  global:
    - JENKINS_HOME=/home/jenkins
    - JENKINS_UID=3000
    - DOCKER_GID=999
    - secure: TGUihI8NZudZK09yhYmP3DF2YarY4d9ljgm+sArpvc7Ga7NvU7A2GxJm6KJ6ZAxBd/K+R89vo6fRWQma4ZFOjbi/TLabDgWJVD+aabhY5n1gPBDuoz/N7At3v4Ws1qD4M3Bj8+ds+ye1q+0MEDy+AYko8+UUhgLEvsbGUI9d4PY=
    - DJANGO_VERSION=2.2.6
  matrix:
#  - ANSIBLE_VERSION=latest
#  - ANSIBLE_VERSION=2.7.14
  - ANSIBLE_VERSION=2.9.4

sudo: required
#dist: trusty
dist: travis_lts
#dist: bionic

branches:
  only:
  - master
virtualenv:
  system_site_packages: false
before_install:
  - sudo apt-get update -qq
  - sudo apt-get install -qq python-apt python-pycurl
  - sudo apt-get install -qq curl
install:
  # Install Ansible.
  - if [ "$ANSIBLE_VERSION" = "latest" ]; then pip install ansible; else pip install ansible==$ANSIBLE_VERSION; fi
  - if [ "$ANSIBLE_VERSION" = "latest" ]; then pip install ansible-lint; fi

  - pip3 install molecule==3.0.2

  # Update Ansible submodule.
  - git pull && git submodule init
  #- git submodule update && git submodule status
  - git submodule foreach git checkout master

  - ansible-galaxy install -r requirements.yml -p ./roles/ --ignore-errors

script:
  # Check ansible version
  - ansible --version

  # Add ansible.cfg to pick up roles path.
  #- "{ echo '[defaults]'; echo 'roles_path = ./roles'; } >> ansible.cfg"
  #- export ANSIBLE_ROLES_PATH="../"

  # Prepare tests
  # Add user jenkins to the image
  - id -a
  - getent passwd 3000 || true # 3000 not found we can use it for jenkins user
#  - groupadd -g ${DOCKER_GID} docker && \
  - sudo adduser --quiet --disabled-password --shell /bin/bash --uid ${JENKINS_UID} --gid ${DOCKER_GID} --home ${JENKINS_HOME} --gecos "Jenkins" jenkins
  # Set password for the jenkins user (you may want to alter this).
#  - sudo echo "jenkins:jenkins1234" | sudo chpasswd

  - echo "${ANSIBLE_VAULT_PASS}" > vault.passwd
  #- ansible-vault view --vault-password-file vault.passwd playbooks/group_vars/all/vault.yml

  # Check the role/playbook's syntax.
  - ansible-playbook --syntax-check -i inventory/hosts playbooks/jenkins-slave-docker.yml --connection=local -e "python_versions=[2.7, 3.7, 3.8]" -e "jenkins_group=docker" -e "docker_gid=${DOCKER_GID}" -e "jenkins_id=${JENKINS_UID}" -e "python_enabled=false" -e "git_user=root" --vault-password-file=vault.passwd --skip-tags restart

  # Molecule test
  # - molecule test

  # First run
  # Run the role/playbook with ansible-playbook.
  - travis_wait 30 ansible-playbook -i inventory/hosts playbooks/jenkins-slave-docker.yml --connection=local -e "python_versions=[2.7, 3.7, 3.8]" -e "jenkins_group=docker" -e "docker_gid=${DOCKER_GID}" -e "jenkins_id=${JENKINS_UID}" -e "python_enabled=false" -e "git_user=root" --vault-password-file=vault.passwd --skip-tags restart

  # Second run Idempotence test
  # Run the role/playbook again, checking to make sure it's idempotent.
#    ansible-playbook -i inventory/hosts playbooks/jenkins-slave-docker.yml --connection=local -e "python_versions=[2.7, 3.5, 3.7, 3.8]" -e "jenkins_group=docker" -e "docker_gid=${DOCKER_GID}" -e "jenkins_id=${JENKINS_UID}" -e "python_enabled=false" -e "git_user=root" --vault-password-file=vault.passwd --skip-tags restart
#  - >
#    tail ${idempotence}
#    | grep -q 'changed=0.*failed=0'
#    && (echo 'Idempotence test: pass' && exit 0)
#    || (echo 'Idempotence test: fail' && exit 1)

#  - sudo /etc/init.d/jenkins status || exit 1
#  - sudo /etc/init.d/nexus status || exit 1
#  - sudo /etc/init.d/mon status || exit 1

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/47b10b81867bd0063cf5
      - https://galaxy.ansible.com/api/v1/notifications/
    on_success: change
    on_failure: always
    on_start: false
  email:
    recipients:
      - alban.andrieu@nabla.mobi
    on_success: [always|never|change]         # default: change
    on_failure: [always|never|change]         # default: always
