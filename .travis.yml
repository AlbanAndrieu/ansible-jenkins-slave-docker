language: python
python:
- 2.7
cache: bundler
env:
  matrix:
  - ANSIBLE_VERSION=2.6.3
  global:
    secure: MD73NCVzctbVmi2QnQtwtH/ISXN2K0alsLbixoaXl7gr3XvTB4sYB0u+KKtPV46jbeAlQqTRObPfQouPrsLsiNDYcpuN0I5bKsn3TTs4ZHIkD0I2Q9Wh3qNM2fYf9mw3ZUhvXVTEod0W7jzkVGb6kitRCJj8rioKKzvE/YdVsG4=
sudo: required
dist: trusty
branches:
  only:
  - master
before_install:
- sudo apt-get update -qq
- sudo apt-get install curl
- sudo apt-get install -qq python-apt python-pycurl
install:
- if [ "$ANSIBLE_VERSION" = "latest" ]; then pip install ansible; else pip install
  ansible==$ANSIBLE_VERSION; fi
- if [ "$ANSIBLE_VERSION" = "latest" ]; then pip install ansible-lint; fi
- git pull && git submodule init && git submodule update && git submodule status
- git submodule foreach git checkout master
- ansible-galaxy install -r requirements.yml -p ./roles/ --ignore-errors
script:
  # Check ansible version
  - ansible --version
  
  # Add ansible.cfg to pick up roles path.
  #- "{ echo '[defaults]'; echo 'roles_path = ./roles'; } >> ansible.cfg"
  #- export ANSIBLE_ROLES_PATH="../"

  # Prepare tests
  #- echo localhost > hosts

  # Check syntax
  # Check the role/playbook's syntax.
  - ansible-playbook --syntax-check -i hosts playbooks/jenkins-slave-docker.yml --connection=local -e "python_versions=[2.7, 3.5]" -e "docker_gid=3000" -e "python_enabled=false"

  # First run
  # Run the role/playbook with ansible-playbook.
  - ansible-playbook -i hosts playbooks/jenkins-slave-docker.yml --connection=local --sudo -vvvv -e "python_versions=[2.7, 3.5]" -e "docker_gid=3000" -e "python_enabled=false"

  # Second run Idempotence test
  # Run the role/playbook again, checking to make sure it's idempotent.
#  - >
#    ansible-playbook -i hosts playbooks/jenkins-slave-docker.yml --connection=local --sudo
#    | grep -q 'changed=0.*failed=0'
#    && (echo 'Idempotence test: pass' && exit 0)
#    || (echo 'Idempotence test: fail' && exit 1)

#  - sudo /etc/init.d/jenkins status || exit 1
#  - sudo /etc/init.d/nexus status || exit 1
#  - sudo /etc/init.d/mon status || exit 1

  # Test whether kibana is running correctly.
#  - curl http://localhost/

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
  email:
    recipients:
    - alban.andrieu@nabla.mobi
    on_success:
    - always|never|change
    on_failure:
    - always|never|change
